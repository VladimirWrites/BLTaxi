apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'
apply plugin: 'com.google.firebase.crashlytics'

jacoco {
    toolVersion = Versions.jacoco
    reportsDir = file("$buildDir/jacocoReport")
}

apply from: '../buildsystem/jacoco.gradle'

android {
    compileSdkVersion Versions.compile_sdk
    buildToolsVersion Versions.build_tools
    defaultConfig {
        applicationId "com.vlad1m1r.bltaxi"
        minSdkVersion Versions.min_sdk
        targetSdkVersion Versions.target_sdk
        versionCode Versions.version_code
        versionName Versions.version_name
        setProperty("archivesBaseName", "BL Taxi-$versionName")

        testOptions.unitTests.includeAndroidResources = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig = true
        dataBinding = true
    }

    testOptions {
        animationsDisabled = true
        unitTests.all {
            systemProperty 'robolectric.dependency.repo.url', 'https://repo1.maven.org/maven2'
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

dependencies {
    implementation Deps.kotlin_stdlib
    implementation Deps.kotlin_coroutines_android

    implementation Deps.preference_ktx

    implementation Deps.koin

    implementation project(Modules.domain)
    implementation project(Modules.basedata)
    implementation project(Modules.baseui)
    implementation project(Modules.repository)
    implementation project(Modules.settings)
    implementation project(Modules.about)
    implementation project(Modules.remote)
    implementation project(Modules.local)
    implementation project(Modules.actions)
    implementation project(Modules.taxi)
    implementation project(Modules.analytics)
    implementation project(Modules.settings)
    implementation project(Modules.sync)
    implementation project(Modules.shortcuts)

    testImplementation Deps.junit

    testImplementation Deps.truth
    testImplementation Deps.mockito_kotlin
    testImplementation Deps.mockito_inline
    testImplementation Deps.robolectric
    testImplementation Deps.fragment_test
    testImplementation Deps.koin_test
    testImplementation Deps.espresso_core
    testImplementation Deps.test_core_ktx

    kaptTest Deps.databinding_compiler
}
apply plugin: 'com.google.gms.google-services'
